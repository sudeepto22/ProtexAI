{"ast":null,"code":"var _jsxFileName = \"/home/sudeepto/Desktop/Projects/ProtexAI/src/ui_consumer/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport mqtt from \"mqtt\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [metrics, setMetrics] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const [history, setHistory] = useState([]);\n  useEffect(() => {\n    const brokerUrl = process.env.REACT_APP_MQTT_BROKER || \"ws://localhost:9001\";\n    const topic = process.env.REACT_APP_MQTT_TOPIC || \"protexai/sensors\";\n    console.log(\"Connecting to MQTT broker:\", brokerUrl);\n    const client = mqtt.connect(brokerUrl, {\n      clientId: `ui-consumer-${Math.random().toString(16).slice(2, 10)}`\n    });\n    client.on(\"connect\", () => {\n      console.log(\"Connected to MQTT broker\");\n      setConnected(true);\n      client.subscribe(topic, err => {\n        if (err) {\n          console.error(\"Subscription error:\", err);\n        } else {\n          console.log(\"Subscribed to topic:\", topic);\n        }\n      });\n    });\n    client.on(\"message\", (_topic, message) => {\n      try {\n        const data = JSON.parse(message.toString());\n        setMetrics(data);\n        setHistory(prev => [data, ...prev].slice(0, 10));\n      } catch (err) {\n        console.error(\"Error parsing message:\", err);\n      }\n    });\n    client.on(\"error\", err => {\n      console.error(\"MQTT error:\", err);\n      setConnected(false);\n    });\n    client.on(\"close\", () => {\n      console.log(\"Connection closed\");\n      setConnected(false);\n    });\n    return () => {\n      client.end();\n    };\n  }, []);\n  const getStatusColor = percent => {\n    if (percent > 80) return \"#ff4444\";\n    if (percent > 60) return \"#ffaa00\";\n    return \"#44ff44\";\n  };\n  const getTemperature = temps => {\n    if (!temps || temps.length === 0) return null;\n\n    // Find CPU temp (Tctl)\n    for (const temp of temps) {\n      if (temp.label && temp.label.includes(\"Tctl\")) {\n        return {\n          type: \"CPU\",\n          value: temp.current_c\n        };\n      }\n    }\n\n    // Find GPU temp (edge)\n    for (const temp of temps) {\n      if (temp.label && temp.label.includes(\"edge\")) {\n        return {\n          type: \"GPU\",\n          value: temp.current_c\n        };\n      }\n    }\n\n    // Find SSD temp (Composite)\n    for (const temp of temps) {\n      if (temp.label && temp.label.includes(\"Composite\")) {\n        return {\n          type: \"SSD\",\n          value: temp.current_c\n        };\n      }\n    }\n    return null;\n  };\n  if (!connected) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-bar disconnected\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), \"Connecting to MQTT broker...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this);\n  }\n  if (!metrics) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-bar connected\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), \"Connected - Waiting for metrics...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this);\n  }\n  const temp = getTemperature(metrics.temperature);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-bar connected\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"status-dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), \"Connected to MQTT\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"ProtexAI System Monitor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"platform\",\n          children: metrics.platform\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metrics-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"CPU\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"metric-value\",\n              style: {\n                color: getStatusColor(metrics.cpu.usage_percent)\n              },\n              children: [metrics.cpu.usage_percent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-details\",\n            children: [metrics.cpu.cores_physical && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Cores: \", metrics.cpu.cores_physical, \"P /\", \" \", metrics.cpu.cores_logical, \"L\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this), metrics.cpu.frequency_mhz && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Frequency: \", metrics.cpu.frequency_mhz.toFixed(0), \" MHz\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-fill\",\n              style: {\n                width: `${metrics.cpu.usage_percent}%`,\n                backgroundColor: getStatusColor(metrics.cpu.usage_percent)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"RAM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"metric-value\",\n              style: {\n                color: getStatusColor(metrics.ram.usage_percent)\n              },\n              children: [metrics.ram.usage_percent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [metrics.ram.used_gb.toFixed(1), \" GB /\", \" \", metrics.ram.total_gb.toFixed(1), \" GB\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Available: \", metrics.ram.available_gb.toFixed(1), \" GB\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-fill\",\n              style: {\n                width: `${metrics.ram.usage_percent}%`,\n                backgroundColor: getStatusColor(metrics.ram.usage_percent)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Disk\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"metric-value\",\n              style: {\n                color: getStatusColor(metrics.disk.usage_percent)\n              },\n              children: [metrics.disk.usage_percent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [metrics.disk.used_gb.toFixed(1), \" GB /\", \" \", metrics.disk.total_gb.toFixed(1), \" GB\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Free: \", metrics.disk.free_gb.toFixed(1), \" GB\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-fill\",\n              style: {\n                width: `${metrics.disk.usage_percent}%`,\n                backgroundColor: getStatusColor(metrics.disk.usage_percent)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), metrics.gpu && metrics.gpu.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"GPU\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"metric-value\",\n              style: {\n                color: getStatusColor(metrics.gpu[0].load_percent)\n              },\n              children: [metrics.gpu[0].load_percent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Memory: \", metrics.gpu[0].memory_used_gb.toFixed(2), \" GB /\", \" \", metrics.gpu[0].memory_total_gb.toFixed(2), \" GB\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this), metrics.gpu[0].temperature_c && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Temperature: \", metrics.gpu[0].temperature_c, \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-fill\",\n              style: {\n                width: `${metrics.gpu[0].load_percent}%`,\n                backgroundColor: getStatusColor(metrics.gpu[0].load_percent)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this), temp && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-card temperature\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Temperature\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"metric-value\",\n              children: [temp.value.toFixed(1), \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-details\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [temp.type, \" Temperature\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timestamp\",\n        children: [\"Last Updated: \", new Date(metrics.timestamp).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), history.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"history\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Recent Metrics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"CPU %\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"RAM %\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Disk %\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 19\n              }, this), history[0].gpu && /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"GPU %\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: history.slice(0, 5).map((item, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(item.timestamp).toLocaleTimeString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [item.cpu.usage_percent, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [item.ram.usage_percent, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [item.disk.usage_percent, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 21\n              }, this), item.gpu && /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [item.gpu[0].load_percent, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 34\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7PEwRNTR0hequHX8icJR7VbAl3A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","mqtt","jsxDEV","_jsxDEV","App","_s","metrics","setMetrics","connected","setConnected","history","setHistory","brokerUrl","process","env","REACT_APP_MQTT_BROKER","topic","REACT_APP_MQTT_TOPIC","console","log","client","connect","clientId","Math","random","toString","slice","on","subscribe","err","error","_topic","message","data","JSON","parse","prev","end","getStatusColor","percent","getTemperature","temps","length","temp","label","includes","type","value","current_c","className","children","fileName","_jsxFileName","lineNumber","columnNumber","temperature","platform","style","color","cpu","usage_percent","cores_physical","cores_logical","frequency_mhz","toFixed","width","backgroundColor","ram","used_gb","total_gb","available_gb","disk","free_gb","gpu","load_percent","memory_used_gb","memory_total_gb","temperature_c","Date","timestamp","toLocaleString","map","item","idx","toLocaleTimeString","_c","$RefreshReg$"],"sources":["/home/sudeepto/Desktop/Projects/ProtexAI/src/ui_consumer/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport mqtt, { MqttClient } from \"mqtt\";\nimport \"./App.css\";\n\ninterface CPUMetrics {\n  usage_percent: number;\n  usage_per_core: number[];\n  frequency_mhz: number;\n  cores_physical: number;\n  cores_logical: number;\n}\n\ninterface GPUMetrics {\n  name: string;\n  load_percent: number;\n  memory_used_gb: number;\n  memory_total_gb: number;\n  memory_usage_percent: number;\n  temperature_c: number | null;\n}\n\ninterface RAMMetrics {\n  total_gb: number;\n  available_gb: number;\n  used_gb: number;\n  usage_percent: number;\n}\n\ninterface DiskMetrics {\n  total_gb: number;\n  used_gb: number;\n  free_gb: number;\n  usage_percent: number;\n}\n\ninterface TemperatureMetrics {\n  label: string;\n  current_c: number;\n  high_c: number | null;\n  critical_c: number | null;\n}\n\ninterface SystemMetrics {\n  timestamp: string;\n  platform: string;\n  cpu: CPUMetrics;\n  gpu: GPUMetrics[] | null;\n  ram: RAMMetrics;\n  disk: DiskMetrics;\n  temperature: TemperatureMetrics[] | null;\n}\n\ninterface Temperature {\n  type: string;\n  value: number;\n}\n\nfunction App() {\n  const [metrics, setMetrics] = useState<SystemMetrics | null>(null);\n  const [connected, setConnected] = useState(false);\n  const [history, setHistory] = useState<SystemMetrics[]>([]);\n\n  useEffect(() => {\n    const brokerUrl =\n      process.env.REACT_APP_MQTT_BROKER || \"ws://localhost:9001\";\n    const topic = process.env.REACT_APP_MQTT_TOPIC || \"protexai/sensors\";\n\n    console.log(\"Connecting to MQTT broker:\", brokerUrl);\n\n    const client: MqttClient = mqtt.connect(brokerUrl, {\n      clientId: `ui-consumer-${Math.random().toString(16).slice(2, 10)}`,\n    });\n\n    client.on(\"connect\", () => {\n      console.log(\"Connected to MQTT broker\");\n      setConnected(true);\n      client.subscribe(topic, (err) => {\n        if (err) {\n          console.error(\"Subscription error:\", err);\n        } else {\n          console.log(\"Subscribed to topic:\", topic);\n        }\n      });\n    });\n\n    client.on(\"message\", (_topic: string, message: Buffer) => {\n      try {\n        const data: SystemMetrics = JSON.parse(message.toString());\n        setMetrics(data);\n        setHistory((prev) => [data, ...prev].slice(0, 10));\n      } catch (err) {\n        console.error(\"Error parsing message:\", err);\n      }\n    });\n\n    client.on(\"error\", (err) => {\n      console.error(\"MQTT error:\", err);\n      setConnected(false);\n    });\n\n    client.on(\"close\", () => {\n      console.log(\"Connection closed\");\n      setConnected(false);\n    });\n\n    return () => {\n      client.end();\n    };\n  }, []);\n\n  const getStatusColor = (percent: number): string => {\n    if (percent > 80) return \"#ff4444\";\n    if (percent > 60) return \"#ffaa00\";\n    return \"#44ff44\";\n  };\n\n  const getTemperature = (\n    temps: TemperatureMetrics[] | null\n  ): Temperature | null => {\n    if (!temps || temps.length === 0) return null;\n\n    // Find CPU temp (Tctl)\n    for (const temp of temps) {\n      if (temp.label && temp.label.includes(\"Tctl\")) {\n        return { type: \"CPU\", value: temp.current_c };\n      }\n    }\n\n    // Find GPU temp (edge)\n    for (const temp of temps) {\n      if (temp.label && temp.label.includes(\"edge\")) {\n        return { type: \"GPU\", value: temp.current_c };\n      }\n    }\n\n    // Find SSD temp (Composite)\n    for (const temp of temps) {\n      if (temp.label && temp.label.includes(\"Composite\")) {\n        return { type: \"SSD\", value: temp.current_c };\n      }\n    }\n\n    return null;\n  };\n\n  if (!connected) {\n    return (\n      <div className=\"App\">\n        <div className=\"status-bar disconnected\">\n          <span className=\"status-dot\"></span>\n          Connecting to MQTT broker...\n        </div>\n      </div>\n    );\n  }\n\n  if (!metrics) {\n    return (\n      <div className=\"App\">\n        <div className=\"status-bar connected\">\n          <span className=\"status-dot\"></span>\n          Connected - Waiting for metrics...\n        </div>\n      </div>\n    );\n  }\n\n  const temp = getTemperature(metrics.temperature);\n\n  return (\n    <div className=\"App\">\n      <div className=\"status-bar connected\">\n        <span className=\"status-dot\"></span>\n        Connected to MQTT\n      </div>\n\n      <div className=\"container\">\n        <header className=\"header\">\n          <h1>ProtexAI System Monitor</h1>\n          <p className=\"platform\">{metrics.platform}</p>\n        </header>\n\n        <div className=\"metrics-grid\">\n          <div className=\"metric-card\">\n            <div className=\"metric-header\">\n              <h3>CPU</h3>\n              <span\n                className=\"metric-value\"\n                style={{ color: getStatusColor(metrics.cpu.usage_percent) }}\n              >\n                {metrics.cpu.usage_percent}%\n              </span>\n            </div>\n            <div className=\"metric-details\">\n              {metrics.cpu.cores_physical && (\n                <p>\n                  Cores: {metrics.cpu.cores_physical}P /{\" \"}\n                  {metrics.cpu.cores_logical}L\n                </p>\n              )}\n              {metrics.cpu.frequency_mhz && (\n                <p>Frequency: {metrics.cpu.frequency_mhz.toFixed(0)} MHz</p>\n              )}\n            </div>\n            <div className=\"progress-bar\">\n              <div\n                className=\"progress-fill\"\n                style={{\n                  width: `${metrics.cpu.usage_percent}%`,\n                  backgroundColor: getStatusColor(metrics.cpu.usage_percent),\n                }}\n              />\n            </div>\n          </div>\n\n          <div className=\"metric-card\">\n            <div className=\"metric-header\">\n              <h3>RAM</h3>\n              <span\n                className=\"metric-value\"\n                style={{ color: getStatusColor(metrics.ram.usage_percent) }}\n              >\n                {metrics.ram.usage_percent}%\n              </span>\n            </div>\n            <div className=\"metric-details\">\n              <p>\n                {metrics.ram.used_gb.toFixed(1)} GB /{\" \"}\n                {metrics.ram.total_gb.toFixed(1)} GB\n              </p>\n              <p>Available: {metrics.ram.available_gb.toFixed(1)} GB</p>\n            </div>\n            <div className=\"progress-bar\">\n              <div\n                className=\"progress-fill\"\n                style={{\n                  width: `${metrics.ram.usage_percent}%`,\n                  backgroundColor: getStatusColor(metrics.ram.usage_percent),\n                }}\n              />\n            </div>\n          </div>\n\n          <div className=\"metric-card\">\n            <div className=\"metric-header\">\n              <h3>Disk</h3>\n              <span\n                className=\"metric-value\"\n                style={{ color: getStatusColor(metrics.disk.usage_percent) }}\n              >\n                {metrics.disk.usage_percent}%\n              </span>\n            </div>\n            <div className=\"metric-details\">\n              <p>\n                {metrics.disk.used_gb.toFixed(1)} GB /{\" \"}\n                {metrics.disk.total_gb.toFixed(1)} GB\n              </p>\n              <p>Free: {metrics.disk.free_gb.toFixed(1)} GB</p>\n            </div>\n            <div className=\"progress-bar\">\n              <div\n                className=\"progress-fill\"\n                style={{\n                  width: `${metrics.disk.usage_percent}%`,\n                  backgroundColor: getStatusColor(metrics.disk.usage_percent),\n                }}\n              />\n            </div>\n          </div>\n\n          {metrics.gpu && metrics.gpu.length > 0 && (\n            <div className=\"metric-card\">\n              <div className=\"metric-header\">\n                <h3>GPU</h3>\n                <span\n                  className=\"metric-value\"\n                  style={{ color: getStatusColor(metrics.gpu[0].load_percent) }}\n                >\n                  {metrics.gpu[0].load_percent}%\n                </span>\n              </div>\n              <div className=\"metric-details\">\n                <p>\n                  Memory: {metrics.gpu[0].memory_used_gb.toFixed(2)} GB /{\" \"}\n                  {metrics.gpu[0].memory_total_gb.toFixed(2)} GB\n                </p>\n                {metrics.gpu[0].temperature_c && (\n                  <p>Temperature: {metrics.gpu[0].temperature_c}°C</p>\n                )}\n              </div>\n              <div className=\"progress-bar\">\n                <div\n                  className=\"progress-fill\"\n                  style={{\n                    width: `${metrics.gpu[0].load_percent}%`,\n                    backgroundColor: getStatusColor(\n                      metrics.gpu[0].load_percent\n                    ),\n                  }}\n                />\n              </div>\n            </div>\n          )}\n\n          {temp && (\n            <div className=\"metric-card temperature\">\n              <div className=\"metric-header\">\n                <h3>Temperature</h3>\n                <span className=\"metric-value\">{temp.value.toFixed(1)}°C</span>\n              </div>\n              <div className=\"metric-details\">\n                <p>{temp.type} Temperature</p>\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div className=\"timestamp\">\n          Last Updated: {new Date(metrics.timestamp).toLocaleString()}\n        </div>\n\n        {history.length > 1 && (\n          <div className=\"history\">\n            <h3>Recent Metrics</h3>\n            <table>\n              <thead>\n                <tr>\n                  <th>Time</th>\n                  <th>CPU %</th>\n                  <th>RAM %</th>\n                  <th>Disk %</th>\n                  {history[0].gpu && <th>GPU %</th>}\n                </tr>\n              </thead>\n              <tbody>\n                {history.slice(0, 5).map((item, idx) => (\n                  <tr key={idx}>\n                    <td>{new Date(item.timestamp).toLocaleTimeString()}</td>\n                    <td>{item.cpu.usage_percent}%</td>\n                    <td>{item.ram.usage_percent}%</td>\n                    <td>{item.disk.usage_percent}%</td>\n                    {item.gpu && <td>{item.gpu[0].load_percent}%</td>}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
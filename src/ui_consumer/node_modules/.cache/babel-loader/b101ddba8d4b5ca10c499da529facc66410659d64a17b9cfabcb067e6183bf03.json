{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import mqtt from\"mqtt\";import\"./App.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[metrics,setMetrics]=useState(null);const[connected,setConnected]=useState(false);const[history,setHistory]=useState([]);useEffect(()=>{const brokerUrl=process.env.REACT_APP_MQTT_BROKER||\"ws://localhost:9001\";const topic=process.env.REACT_APP_MQTT_TOPIC||\"protexai/sensors\";console.log(\"Connecting to MQTT broker:\",brokerUrl);const client=mqtt.connect(brokerUrl,{clientId:\"ui-consumer-\".concat(Math.random().toString(16).slice(2,10))});client.on(\"connect\",()=>{console.log(\"Connected to MQTT broker\");setConnected(true);client.subscribe(topic,err=>{if(err){console.error(\"Subscription error:\",err);}else{console.log(\"Subscribed to topic:\",topic);}});});client.on(\"message\",(_topic,message)=>{try{const data=JSON.parse(message.toString());setMetrics(data);setHistory(prev=>[data,...prev].slice(0,10));}catch(err){console.error(\"Error parsing message:\",err);}});client.on(\"error\",err=>{console.error(\"MQTT error:\",err);setConnected(false);});client.on(\"close\",()=>{console.log(\"Connection closed\");setConnected(false);});return()=>{client.end();};},[]);const getStatusColor=percent=>{if(percent>80)return\"#ff4444\";if(percent>60)return\"#ffaa00\";return\"#44ff44\";};const getTemperature=temps=>{if(!temps||temps.length===0)return null;// Find CPU temp (Tctl)\nfor(const temp of temps){if(temp.label&&temp.label.includes(\"Tctl\")){return{type:\"CPU\",value:temp.current_c};}}// Find GPU temp (edge)\nfor(const temp of temps){if(temp.label&&temp.label.includes(\"edge\")){return{type:\"GPU\",value:temp.current_c};}}// Find SSD temp (Composite)\nfor(const temp of temps){if(temp.label&&temp.label.includes(\"Composite\")){return{type:\"SSD\",value:temp.current_c};}}return null;};if(!connected){return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"status-bar disconnected\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"status-dot\"}),\"Connecting to MQTT broker...\"]})});}if(!metrics){return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"status-bar connected\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"status-dot\"}),\"Connected - Waiting for metrics...\"]})});}const temp=getTemperature(metrics.temperature);return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"status-bar connected\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"status-dot\"}),\"Connected to MQTT\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"ProtexAI System Monitor\"}),/*#__PURE__*/_jsx(\"p\",{className:\"platform\",children:metrics.platform})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metrics-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"metric-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"CPU\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"metric-value\",style:{color:getStatusColor(metrics.cpu.usage_percent)},children:[metrics.cpu.usage_percent,\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-details\",children:[metrics.cpu.cores_physical&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Cores: \",metrics.cpu.cores_physical,\"P /\",\" \",metrics.cpu.cores_logical,\"L\"]}),metrics.cpu.frequency_mhz&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Frequency: \",metrics.cpu.frequency_mhz.toFixed(0),\" MHz\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-fill\",style:{width:\"\".concat(metrics.cpu.usage_percent,\"%\"),backgroundColor:getStatusColor(metrics.cpu.usage_percent)}})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"metric-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"RAM\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"metric-value\",style:{color:getStatusColor(metrics.ram.usage_percent)},children:[metrics.ram.usage_percent,\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-details\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[metrics.ram.used_gb.toFixed(1),\" GB /\",\" \",metrics.ram.total_gb.toFixed(1),\" GB\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Available: \",metrics.ram.available_gb.toFixed(1),\" GB\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-fill\",style:{width:\"\".concat(metrics.ram.usage_percent,\"%\"),backgroundColor:getStatusColor(metrics.ram.usage_percent)}})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"metric-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Disk\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"metric-value\",style:{color:getStatusColor(metrics.disk.usage_percent)},children:[metrics.disk.usage_percent,\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-details\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[metrics.disk.used_gb.toFixed(1),\" GB /\",\" \",metrics.disk.total_gb.toFixed(1),\" GB\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Free: \",metrics.disk.free_gb.toFixed(1),\" GB\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-fill\",style:{width:\"\".concat(metrics.disk.usage_percent,\"%\"),backgroundColor:getStatusColor(metrics.disk.usage_percent)}})})]}),metrics.gpu&&metrics.gpu.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"metric-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"GPU\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"metric-value\",style:{color:getStatusColor(metrics.gpu[0].load_percent)},children:[metrics.gpu[0].load_percent,\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-details\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Memory: \",metrics.gpu[0].memory_used_gb.toFixed(2),\" GB /\",\" \",metrics.gpu[0].memory_total_gb.toFixed(2),\" GB\"]}),metrics.gpu[0].temperature_c&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Temperature: \",metrics.gpu[0].temperature_c,\"\\xB0C\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-fill\",style:{width:\"\".concat(metrics.gpu[0].load_percent,\"%\"),backgroundColor:getStatusColor(metrics.gpu[0].load_percent)}})})]}),temp&&/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card temperature\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"metric-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Temperature\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"metric-value\",children:[temp.value.toFixed(1),\"\\xB0C\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"metric-details\",children:/*#__PURE__*/_jsxs(\"p\",{children:[temp.type,\" Temperature\"]})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"timestamp\",children:[\"Last Updated: \",new Date(metrics.timestamp).toLocaleString()]}),history.length>1&&/*#__PURE__*/_jsxs(\"div\",{className:\"history\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Recent Metrics\"}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Time\"}),/*#__PURE__*/_jsx(\"th\",{children:\"CPU %\"}),/*#__PURE__*/_jsx(\"th\",{children:\"RAM %\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Disk %\"}),history[0].gpu&&/*#__PURE__*/_jsx(\"th\",{children:\"GPU %\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:history.slice(0,5).map((item,idx)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:new Date(item.timestamp).toLocaleTimeString()}),/*#__PURE__*/_jsxs(\"td\",{children:[item.cpu.usage_percent,\"%\"]}),/*#__PURE__*/_jsxs(\"td\",{children:[item.ram.usage_percent,\"%\"]}),/*#__PURE__*/_jsxs(\"td\",{children:[item.disk.usage_percent,\"%\"]}),item.gpu&&/*#__PURE__*/_jsxs(\"td\",{children:[item.gpu[0].load_percent,\"%\"]})]},idx))})]})]})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","mqtt","jsx","_jsx","jsxs","_jsxs","App","metrics","setMetrics","connected","setConnected","history","setHistory","brokerUrl","process","env","REACT_APP_MQTT_BROKER","topic","REACT_APP_MQTT_TOPIC","console","log","client","connect","clientId","concat","Math","random","toString","slice","on","subscribe","err","error","_topic","message","data","JSON","parse","prev","end","getStatusColor","percent","getTemperature","temps","length","temp","label","includes","type","value","current_c","className","children","temperature","platform","style","color","cpu","usage_percent","cores_physical","cores_logical","frequency_mhz","toFixed","width","backgroundColor","ram","used_gb","total_gb","available_gb","disk","free_gb","gpu","load_percent","memory_used_gb","memory_total_gb","temperature_c","Date","timestamp","toLocaleString","map","item","idx","toLocaleTimeString"],"sources":["/home/sudeepto/Desktop/Projects/ProtexAI/src/ui_consumer/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport mqtt, { MqttClient } from \"mqtt\";\nimport \"./App.css\";\n\ninterface CPUMetrics {\n  usage_percent: number;\n  usage_per_core: number[];\n  frequency_mhz: number;\n  cores_physical: number;\n  cores_logical: number;\n}\n\ninterface GPUMetrics {\n  name: string;\n  load_percent: number;\n  memory_used_gb: number;\n  memory_total_gb: number;\n  memory_usage_percent: number;\n  temperature_c: number | null;\n}\n\ninterface RAMMetrics {\n  total_gb: number;\n  available_gb: number;\n  used_gb: number;\n  usage_percent: number;\n}\n\ninterface DiskMetrics {\n  total_gb: number;\n  used_gb: number;\n  free_gb: number;\n  usage_percent: number;\n}\n\ninterface TemperatureMetrics {\n  label: string;\n  current_c: number;\n  high_c: number | null;\n  critical_c: number | null;\n}\n\ninterface SystemMetrics {\n  timestamp: string;\n  platform: string;\n  cpu: CPUMetrics;\n  gpu: GPUMetrics[] | null;\n  ram: RAMMetrics;\n  disk: DiskMetrics;\n  temperature: TemperatureMetrics[] | null;\n}\n\ninterface Temperature {\n  type: string;\n  value: number;\n}\n\nfunction App() {\n  const [metrics, setMetrics] = useState<SystemMetrics | null>(null);\n  const [connected, setConnected] = useState(false);\n  const [history, setHistory] = useState<SystemMetrics[]>([]);\n\n  useEffect(() => {\n    const brokerUrl =\n      process.env.REACT_APP_MQTT_BROKER || \"ws://localhost:9001\";\n    const topic = process.env.REACT_APP_MQTT_TOPIC || \"protexai/sensors\";\n\n    console.log(\"Connecting to MQTT broker:\", brokerUrl);\n\n    const client: MqttClient = mqtt.connect(brokerUrl, {\n      clientId: `ui-consumer-${Math.random().toString(16).slice(2, 10)}`,\n    });\n\n    client.on(\"connect\", () => {\n      console.log(\"Connected to MQTT broker\");\n      setConnected(true);\n      client.subscribe(topic, (err) => {\n        if (err) {\n          console.error(\"Subscription error:\", err);\n        } else {\n          console.log(\"Subscribed to topic:\", topic);\n        }\n      });\n    });\n\n    client.on(\"message\", (_topic: string, message: Buffer) => {\n      try {\n        const data: SystemMetrics = JSON.parse(message.toString());\n        setMetrics(data);\n        setHistory((prev) => [data, ...prev].slice(0, 10));\n      } catch (err) {\n        console.error(\"Error parsing message:\", err);\n      }\n    });\n\n    client.on(\"error\", (err) => {\n      console.error(\"MQTT error:\", err);\n      setConnected(false);\n    });\n\n    client.on(\"close\", () => {\n      console.log(\"Connection closed\");\n      setConnected(false);\n    });\n\n    return () => {\n      client.end();\n    };\n  }, []);\n\n  const getStatusColor = (percent: number): string => {\n    if (percent > 80) return \"#ff4444\";\n    if (percent > 60) return \"#ffaa00\";\n    return \"#44ff44\";\n  };\n\n  const getTemperature = (\n    temps: TemperatureMetrics[] | null\n  ): Temperature | null => {\n    if (!temps || temps.length === 0) return null;\n\n    // Find CPU temp (Tctl)\n    for (const temp of temps) {\n      if (temp.label && temp.label.includes(\"Tctl\")) {\n        return { type: \"CPU\", value: temp.current_c };\n      }\n    }\n\n    // Find GPU temp (edge)\n    for (const temp of temps) {\n      if (temp.label && temp.label.includes(\"edge\")) {\n        return { type: \"GPU\", value: temp.current_c };\n      }\n    }\n\n    // Find SSD temp (Composite)\n    for (const temp of temps) {\n      if (temp.label && temp.label.includes(\"Composite\")) {\n        return { type: \"SSD\", value: temp.current_c };\n      }\n    }\n\n    return null;\n  };\n\n  if (!connected) {\n    return (\n      <div className=\"App\">\n        <div className=\"status-bar disconnected\">\n          <span className=\"status-dot\"></span>\n          Connecting to MQTT broker...\n        </div>\n      </div>\n    );\n  }\n\n  if (!metrics) {\n    return (\n      <div className=\"App\">\n        <div className=\"status-bar connected\">\n          <span className=\"status-dot\"></span>\n          Connected - Waiting for metrics...\n        </div>\n      </div>\n    );\n  }\n\n  const temp = getTemperature(metrics.temperature);\n\n  return (\n    <div className=\"App\">\n      <div className=\"status-bar connected\">\n        <span className=\"status-dot\"></span>\n        Connected to MQTT\n      </div>\n\n      <div className=\"container\">\n        <header className=\"header\">\n          <h1>ProtexAI System Monitor</h1>\n          <p className=\"platform\">{metrics.platform}</p>\n        </header>\n\n        <div className=\"metrics-grid\">\n          <div className=\"metric-card\">\n            <div className=\"metric-header\">\n              <h3>CPU</h3>\n              <span\n                className=\"metric-value\"\n                style={{ color: getStatusColor(metrics.cpu.usage_percent) }}\n              >\n                {metrics.cpu.usage_percent}%\n              </span>\n            </div>\n            <div className=\"metric-details\">\n              {metrics.cpu.cores_physical && (\n                <p>\n                  Cores: {metrics.cpu.cores_physical}P /{\" \"}\n                  {metrics.cpu.cores_logical}L\n                </p>\n              )}\n              {metrics.cpu.frequency_mhz && (\n                <p>Frequency: {metrics.cpu.frequency_mhz.toFixed(0)} MHz</p>\n              )}\n            </div>\n            <div className=\"progress-bar\">\n              <div\n                className=\"progress-fill\"\n                style={{\n                  width: `${metrics.cpu.usage_percent}%`,\n                  backgroundColor: getStatusColor(metrics.cpu.usage_percent),\n                }}\n              />\n            </div>\n          </div>\n\n          <div className=\"metric-card\">\n            <div className=\"metric-header\">\n              <h3>RAM</h3>\n              <span\n                className=\"metric-value\"\n                style={{ color: getStatusColor(metrics.ram.usage_percent) }}\n              >\n                {metrics.ram.usage_percent}%\n              </span>\n            </div>\n            <div className=\"metric-details\">\n              <p>\n                {metrics.ram.used_gb.toFixed(1)} GB /{\" \"}\n                {metrics.ram.total_gb.toFixed(1)} GB\n              </p>\n              <p>Available: {metrics.ram.available_gb.toFixed(1)} GB</p>\n            </div>\n            <div className=\"progress-bar\">\n              <div\n                className=\"progress-fill\"\n                style={{\n                  width: `${metrics.ram.usage_percent}%`,\n                  backgroundColor: getStatusColor(metrics.ram.usage_percent),\n                }}\n              />\n            </div>\n          </div>\n\n          <div className=\"metric-card\">\n            <div className=\"metric-header\">\n              <h3>Disk</h3>\n              <span\n                className=\"metric-value\"\n                style={{ color: getStatusColor(metrics.disk.usage_percent) }}\n              >\n                {metrics.disk.usage_percent}%\n              </span>\n            </div>\n            <div className=\"metric-details\">\n              <p>\n                {metrics.disk.used_gb.toFixed(1)} GB /{\" \"}\n                {metrics.disk.total_gb.toFixed(1)} GB\n              </p>\n              <p>Free: {metrics.disk.free_gb.toFixed(1)} GB</p>\n            </div>\n            <div className=\"progress-bar\">\n              <div\n                className=\"progress-fill\"\n                style={{\n                  width: `${metrics.disk.usage_percent}%`,\n                  backgroundColor: getStatusColor(metrics.disk.usage_percent),\n                }}\n              />\n            </div>\n          </div>\n\n          {metrics.gpu && metrics.gpu.length > 0 && (\n            <div className=\"metric-card\">\n              <div className=\"metric-header\">\n                <h3>GPU</h3>\n                <span\n                  className=\"metric-value\"\n                  style={{ color: getStatusColor(metrics.gpu[0].load_percent) }}\n                >\n                  {metrics.gpu[0].load_percent}%\n                </span>\n              </div>\n              <div className=\"metric-details\">\n                <p>\n                  Memory: {metrics.gpu[0].memory_used_gb.toFixed(2)} GB /{\" \"}\n                  {metrics.gpu[0].memory_total_gb.toFixed(2)} GB\n                </p>\n                {metrics.gpu[0].temperature_c && (\n                  <p>Temperature: {metrics.gpu[0].temperature_c}°C</p>\n                )}\n              </div>\n              <div className=\"progress-bar\">\n                <div\n                  className=\"progress-fill\"\n                  style={{\n                    width: `${metrics.gpu[0].load_percent}%`,\n                    backgroundColor: getStatusColor(\n                      metrics.gpu[0].load_percent\n                    ),\n                  }}\n                />\n              </div>\n            </div>\n          )}\n\n          {temp && (\n            <div className=\"metric-card temperature\">\n              <div className=\"metric-header\">\n                <h3>Temperature</h3>\n                <span className=\"metric-value\">{temp.value.toFixed(1)}°C</span>\n              </div>\n              <div className=\"metric-details\">\n                <p>{temp.type} Temperature</p>\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div className=\"timestamp\">\n          Last Updated: {new Date(metrics.timestamp).toLocaleString()}\n        </div>\n\n        {history.length > 1 && (\n          <div className=\"history\">\n            <h3>Recent Metrics</h3>\n            <table>\n              <thead>\n                <tr>\n                  <th>Time</th>\n                  <th>CPU %</th>\n                  <th>RAM %</th>\n                  <th>Disk %</th>\n                  {history[0].gpu && <th>GPU %</th>}\n                </tr>\n              </thead>\n              <tbody>\n                {history.slice(0, 5).map((item, idx) => (\n                  <tr key={idx}>\n                    <td>{new Date(item.timestamp).toLocaleTimeString()}</td>\n                    <td>{item.cpu.usage_percent}%</td>\n                    <td>{item.ram.usage_percent}%</td>\n                    <td>{item.disk.usage_percent}%</td>\n                    {item.gpu && <td>{item.gpu[0].load_percent}%</td>}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}